javax.vecmath.Matrix4f m1 = new javax.vecmath.Matrix4f();javax.vecmath.Matrix4f m2 = new javax.vecmath.Matrix4f();javax.vecmath.Matrix4f m3 = new javax.vecmath.Matrix4f();javax.vecmath.Matrix4f m = new javax.vecmath.Matrix4f();m.setIdentity();javax.vecmath.Vector3f v = new javax.vecmath.Vector3f(30, -15, 99);m1.set(new javax.vecmath.Vector3f(-v.x, -v.y, -v.z));m2.rotY(0.238746f);m3.set(new javax.vecmath.Vector3f(v.x, v.y, v.z));m.mul(m3);m.mul(m2);m.mul(m1);//m2.transform(v);System.out.println(m1);System.out.println(m2);System.out.println(m3);System.out.println(m);//javax.vecmath.Matrix3f mm = new javax.vecmath.Matrix3f();//mm.rotX((float) Math.PI/2);//mm.invert();javax.vecmath.Vector3f v2 = new javax.vecmath.Vector3f(v);//v2.scale(-1);//m2.transform(v2);//m2.invert();m2.transform(v);v2.sub(v);System.out.println(v2);javax.vecmath.Point3f p = new javax.vecmath.Point3f(1, 1, 1);System.out.println(p);m1.transform(p);m2.transform(p);m3.transform(p);System.out.println(p);p = new javax.vecmath.Point3f(1, 1, 1);m.transform(p);System.out.println(p);javax.vecmath.Matrix4f m = new javax.vecmath.Matrix4f(		1,0,0,10,		0,1,0,11,		0,0,1,12,		0,0,0,1		);System.out.println(m);m.setTranslation(new javax.vecmath.Vector3f(1,2,3));System.out.println(m);javax.vecmath.Matrix4f m1 = new javax.vecmath.Matrix4f();m1.invert(m);System.out.println(m1);System.out.println(null == null);
System.out.println("\n\t\t1,2,3,4".trim());System.out.println("\n\t\t1,2,3,4".split("[\\n\\r ,]+")[1]);System.out.println(Math.signum(-2.0f));Object o1 = null;Object o2 = null;System.out.println(null == null); (No explicit return value)